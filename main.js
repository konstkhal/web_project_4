!function(){"use strict";class e{constructor(e,t,s,i,n){var r,o;o=()=>this._cardTemplate.cloneNode(!0),(r="_getTemplate")in this?Object.defineProperty(this,r,{value:o,enumerable:!0,configurable:!0,writable:!0}):this[r]=o,this._cardSelector=t,this._id=e._id,this._ownerId=e.owner._id,this._userId=e.user_id,this._likesCount=e.likes.length,this._likesList=e.likes,this._cardTemplate=this._cardSelector.content.querySelector(".photo-grid__item"),this._handleTrashButtonClick=i,this._handleCardClick=s,this._handleLikeButtonClick=n,this._name=e.namePlace,this._link=e.linkPlace,this._alt="Picture of ".concat(e.namePlace)}_setEventListeners(){this._cardLikeButtonElement.addEventListener("click",(e=>this._handleLikeButtonClick(this._id))),this._cardTrashButtonElement.addEventListener("click",(()=>this._handleTrashButtonClick(this._id))),this._cardImageElement.addEventListener("click",(()=>this._handleCardClick()))}getIsLiked(){return this._isLiked()}updateLikes(e){this._likesList=e,this._renderLikes()}_isLiked(){return this._likesList.some((e=>e._id===this._userId))}_renderLikes(){const e=this._likesList.length;this._cardLikesCounterElement.textContent=e,this._isLiked()?this._cardLikeButtonElement.classList.add("photo-grid__like-button_active"):this._cardLikeButtonElement.classList.remove("photo-grid__like-button_active")}generateCard(){return this._element=this._getTemplate(),this._cardTitleElement=this._element.querySelector(".photo-grid__title"),this._cardImageElement=this._element.querySelector(".photo-grid__image"),this._cardLikeButtonElement=this._element.querySelector(".photo-grid__like-button"),this._cardTrashButtonElement=this._element.querySelector(".photo-grid__delete-button"),this._cardLikesCounterElement=this._element.querySelector(".photo-grid__likes-counter"),this._cardImageElement.src=this._link,this._cardImageElement.alt=this._name,this._cardTitleElement.textContent=this._name,this._setEventListeners(),this._ownerId!==this._userId&&this._element.querySelector(".photo-grid__delete-button").remove(),this._renderLikes(),this._element}removeCard(){this._element.remove(),this._element=null}}function t(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}var s=class{constructor(e,s){t(this,"_setEventListeners",(()=>{this._toggleButton(),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._сheckInputValidity(e),this._toggleButton()}))}))})),t(this,"_showInputError",(e=>{const t=this._element.querySelector("#".concat(e.id,"-error"));t.textContent=e.validationMessage,t.classList.add(this._config.errorClass),e.classList.add(this._config.inputErrorClass)})),t(this,"_hideInputError",(e=>{const t=this._element.querySelector("#".concat(e.id,"-error"));t.textContent="",t.classList.remove(this._config.errorClass),e.classList.remove(this._config.inputErrorClass)})),t(this,"_сheckInputValidity",(e=>{e.validity.valid?this._hideInputError(e):this._showInputError(e)})),this._config={...e},this._element=s,this._buttonElement=this._element.querySelector(this._config.submitButtonSelector),this._inputList=Array.from(this._element.querySelectorAll(this._config.inputSelector))}_toggleButton(){this._hasValidInputs()?this._buttonElement.disabled=!1:this._buttonElement.disabled=!0}_hasValidInputs(){return this._inputList.every((e=>!0===e.validity.valid))}enableValidation(){this._element.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}resetValidation(){this._element.reset(),this._inputList.forEach((e=>{this._hideInputError(e)})),this._toggleButton()}};const i={inputSelector:".form__input",submitButtonSelector:".form__submit-button",inactiveButtonClass:"button_blocked",inputErrorClass:"form__input-error",errorClass:"form__input-error_visible"},n=document.querySelector(".profile__link-change_place_profile"),r=document.querySelector(".profile__link-add"),o=document.querySelector(".profile__link-change_place_image"),a=document.querySelector(".form__input_type_name"),l=".profile__role",c=(document.querySelector(l),document.querySelector(".form__input_type_role"));document.querySelector(".form__input_type_image-title"),document.querySelector(".form__input_type_image-link");class h{constructor(e){var t,s;s=e=>{"Escape"===e.key&&(e.preventDefault(),this.close())},(t="_handleEscClose")in this?Object.defineProperty(this,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):this[t]=s,this._popupElement=document.querySelector(e)}setEventListeners(){this._popupElement.addEventListener("mousedown",(e=>{(e.target.classList.contains("popup")||e.target.classList.contains("popup__close-button"))&&this.close()}))}open(){this._popupElement.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}}class u extends h{constructor(e,t){super(e),this._popupForm=this._popupElement.querySelector(".form"),this._submitButton=this._popupForm.querySelector(".form__submit-button"),this.handleFormSubmit=t,this._inputsArray=[...this._popupForm.querySelectorAll(".form__input")]}renderLoading(e){e?(this._submitButton.textContent="Saving...",this._submitButton.disabled=!0):(this._submitButton.textContent="Save",this._submitButton.disabled=!1)}getPopupForm(){return this._popupForm}_getInputValues(){const e={};return this._inputsArray.forEach((t=>{e[t.name]=t.value})),e}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(()=>{this.handleFormSubmit(this._getInputValues())}))}close(){super.close(),this._popupForm.reset()}}const _=document.querySelector("#card-template");let d;const p=t=>{const s=new e(t,_,(()=>{E.open(t.linkPlace,t.namePlace)}),(e=>{k.open(),k.setAction((()=>{k.renderLoading(!0),m.deleteCard(e).then((e=>{s.removeCard(),k.close()}))})).catch((e=>{console.log(e)})).finally((()=>{k.renderLoading(!1)}))}),(e=>{s.getIsLiked()?m.disLikeCard(e).then((e=>{s.updateLikes(e.likes)})).catch((e=>{console.log(e)})).finally((()=>{k.renderLoading(!1)})):m.likeCard(e).then((e=>{s.updateLikes(e.likes)})).catch((e=>{console.log(e)})).finally((()=>{k.renderLoading(!1)}))}));return s.generateCard()},m=new class{constructor(e){let{baseUrl:t,headers:s}=e;var i,n;n=async(e,t)=>{const s=await fetch(e,t);return s.ok?s.json():Promise.reject(s.statusText)},(i="_customFetch")in this?Object.defineProperty(this,i,{value:n,enumerable:!0,configurable:!0,writable:!0}):this[i]=n,this._baseUrl=t,this._headers=s}getInitialCards(){return this._customFetch("".concat(this._baseUrl,"/cards"),{headers:this._headers})}getUserInfo(){return this._customFetch("".concat(this._baseUrl,"/users/me"),{headers:this._headers})}setAvatarLink(e){return this._customFetch("".concat(this._baseUrl,"/users/me/avatar"),{headers:this._headers,method:"PATCH",body:JSON.stringify({avatar:e})})}setUserInfo(e){return this._customFetch("".concat(this._baseUrl,"/users/me"),{headers:this._headers,method:"PATCH",body:JSON.stringify(e)})}createCard(e){return this._customFetch("".concat(this._baseUrl,"/cards"),{headers:this._headers,method:"POST",body:JSON.stringify(e)})}deleteCard(e){return this._customFetch("".concat(this._baseUrl,"/cards/").concat(e),{headers:this._headers,method:"DELETE"})}likeCard(e){return this._customFetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{headers:this._headers,method:"PUT"})}disLikeCard(e){return this._customFetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{headers:this._headers,method:"DELETE"})}}({baseUrl:"https://around.nomoreparties.co/v1/group-12",headers:{authorization:"cfbd7707-a110-44ae-8aa8-630296f53c66","Content-Type":"application/json"}}),g=new class{constructor(e,t){let{items:s,renderer:i}=e;var n,r;r=e=>{this.container.prepend(e)},(n="addItem")in this?Object.defineProperty(this,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):this[n]=r,this.renderer=i,this.container=document.querySelector(t)}renderItems(e){e.forEach((e=>{this.addItem(this.renderer(e))}))}}({items:[],renderer:p},".photo-grid__list");m.getUserInfo().then((e=>{b.setUserInfo({profileFormNameInput:e.name,profileFormRoleInput:e.about,avatarLink:e.avatar})})).catch((e=>{console.log(e)})),Promise.all([m.getInitialCards(),m.getUserInfo()]).then((e=>{let[t,s]=e;d=s._id;const i=[];t.forEach((e=>{const t={createdAt:e.createdAt,namePlace:e.name,_id:e._id,linkPlace:e.link,owner:e.owner,likes:e.likes,user_id:d};i.push(t)})),g.renderItems(i)})).catch((e=>{console.log(e)}));const b=new class{constructor(e,t,s){return this._nameSelector=e,this._jobSelector=t,this._nameElement=document.querySelector(e),this._jobElement=document.querySelector(t),this._avatar=document.querySelector(s),this}getUserInfo(){return{name:this._nameElement.textContent,job:this._jobElement.textContent}}setUserInfo(e){this._nameElement.textContent=e.profileFormNameInput,this._jobElement.textContent=e.profileFormRoleInput,this._avatar.alt="Image of ".concat(e.profileFormNameInput),this._avatar.src=e.avatarLink}setUserAvatar(e){let{avatar:t}=e;this._avatar.src=t}}(".profile__name",l,".profile__photo"),v=new u(".popup_type_edit-profile",(function(e){v.renderLoading(!0),m.setUserInfo({name:e.profileFormNameInput,about:e.profileFormRoleInput}).then((e=>{b.setUserInfo({profileFormNameInput:e.name,profileFormRoleInput:e.about,avatarLink:e.avatar}),v.close()})).catch((e=>{console.log(e)})).finally((()=>{v.renderLoading(!1)}))})),f=new u(".popup_type_new-card",(function(e){f.renderLoading(!0),m.createCard({name:e.namePlace,link:e.linkPlace}).then((e=>{g.addItem(p({namePlace:e.name,linkPlace:e.link,_id:e._id,owner:e.owner,user_id:d,likes:e.likes})),f.close()})).catch((e=>{console.log(e)})).finally((()=>{f.renderLoading(!1)}))})),L=new u(".popup_type_avatar-change",(function(e){L.renderLoading(!0);const t=e.name;m.setAvatarLink(t).then((e=>{b.setUserAvatar(e),L.close()})).catch((e=>{console.log(e)})).finally((()=>{L.renderLoading(!1)}))})),E=new class extends h{constructor(e){var t,s;super(e),s=(e,t)=>{this._previewPopupImage.src=e,this._previewPopupImage.alt="Picture of ".concat(t),this._previewPopupDescription.textContent=t,super.open()},(t="open")in this?Object.defineProperty(this,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):this.open=s,this._previewPopupImage=this._popupElement.querySelector(".popup__preview-image"),this._previewPopupDescription=this._popupElement.querySelector(".popup__description")}}(".popup_type_preview"),k=new class extends h{setAction(e){this._handleSubmit=e,this._popupForm=this._popupElement.querySelector(".form"),this._submitButton=this._popupForm.querySelector(".form__submit-button")}setEventListeners(){this._popupElement.addEventListener("submit",(e=>{e.preventDefault(),this._handleSubmit()})),super.setEventListeners()}renderLoading(e){e?(this._submitButton.textContent="Deleting...",this._submitButton.disabled=!0):(this._submitButton.textContent="Yes",this._submitButton.disabled=!1)}}(".popup_type_confirm-delete-card"),y=new s(i,f.getPopupForm()),I=new s(i,v.getPopupForm()),C=new s(i,L.getPopupForm());y.enableValidation(),I.enableValidation(),C.enableValidation(),E.setEventListeners(),v.setEventListeners(),f.setEventListeners(),k.setEventListeners(),L.setEventListeners(),n.addEventListener("click",(()=>{v.open(),I.resetValidation(),function(e){let{name:t,job:s}=e;a.value=t,c.value=s}(b.getUserInfo())})),r.addEventListener("click",(()=>{f.open(),y.resetValidation()})),o.addEventListener("click",(()=>{L.open(),C.resetValidation()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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aUJBQWlCLFNBQVMsS0FDN0NzSyxFQUFhL0YsT0FDYnFHLEVBQVl4SCxxQkFHZE8sRUFBd0IzRCxpQkFBaUIsU0FBUyxLQUNoRHVLLEVBQWdCaEcsT0FDaEJ3RyxFQUFlM0gscUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80Ly4vc3JjL2NvbXBvbmVudHMvQ2FyZC5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80Ly4vc3JjL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvci5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80Ly4vc3JjL3V0aWxzL2NvbnN0YW50cy5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80Ly4vc3JjL2NvbXBvbmVudHMvUG9wdXAuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9wYWdlcy9pbmRleC5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80Ly4vc3JjL2NvbXBvbmVudHMvQXBpLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvY29tcG9uZW50cy9TZWN0aW9uLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvY29tcG9uZW50cy9Vc2VySW5mby5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80Ly4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aFN1Ym1pdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiogVHJhbnNmb3JtaW5nIHRoZSBDYXJkIENsYXNzXG4gKiAgQ29ubmVjdCB0aGUgQ2FyZCBjbGFzcyB0byB0aGUgcG9wdXAuXG4gKiBNYWtlIENhcmQgdGFrZSB0aGUgaGFuZGxlQ2FyZENsaWNrKCkgZnVuY3Rpb24gaW50byB0aGUgY29uc3RydWN0b3IuXG4gKiBXaGVuIHRoZSB1c2VyIGNsaWNrcyBvbiB0aGUgY2FyZCxcbiAqIHRoaXMgZnVuY3Rpb24gd2lsbCBvcGVuIHRoZSBwb3B1cCB3aXRoIGFuIGltYWdlXG4gKi9cblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2FyZCB7XG4gIGNvbnN0cnVjdG9yKFxuICAgIGRhdGEsXG4gICAgY2FyZFNlbGVjdG9yLFxuICAgIGhhbmRsZUNhcmRDbGljayxcbiAgICBoYW5kbGVUcmFzaEJ1dHRvbkNsaWNrLFxuICAgIGhhbmRsZUxpa2VCdXR0b25DbGlja1xuICApIHtcbiAgICB0aGlzLl9jYXJkU2VsZWN0b3IgPSBjYXJkU2VsZWN0b3I7IC8vdGVtcGxhdGUgc2VsZWN0b3JcbiAgICB0aGlzLl9pZCA9IGRhdGEuX2lkO1xuXG4gICAgdGhpcy5fb3duZXJJZCA9IGRhdGEub3duZXIuX2lkO1xuICAgIHRoaXMuX3VzZXJJZCA9IGRhdGEudXNlcl9pZDtcbiAgICB0aGlzLl9saWtlc0NvdW50ID0gZGF0YS5saWtlcy5sZW5ndGg7XG4gICAgdGhpcy5fbGlrZXNMaXN0ID0gZGF0YS5saWtlcztcblxuICAgIHRoaXMuX2NhcmRUZW1wbGF0ZSA9XG4gICAgICB0aGlzLl9jYXJkU2VsZWN0b3IuY29udGVudC5xdWVyeVNlbGVjdG9yKFwiLnBob3RvLWdyaWRfX2l0ZW1cIik7IC8vIHNlbGVjdGluZyBjYXJkIHRlbXBsYXRlIGVsZW1lbnRcblxuICAgIHRoaXMuX2hhbmRsZVRyYXNoQnV0dG9uQ2xpY2sgPSBoYW5kbGVUcmFzaEJ1dHRvbkNsaWNrO1xuICAgIHRoaXMuX2hhbmRsZUNhcmRDbGljayA9IGhhbmRsZUNhcmRDbGljaztcbiAgICB0aGlzLl9oYW5kbGVMaWtlQnV0dG9uQ2xpY2sgPSBoYW5kbGVMaWtlQnV0dG9uQ2xpY2s7XG5cbiAgICB0aGlzLl9uYW1lID0gZGF0YS5uYW1lUGxhY2U7XG4gICAgdGhpcy5fbGluayA9IGRhdGEubGlua1BsYWNlO1xuICAgIHRoaXMuX2FsdCA9IGBQaWN0dXJlIG9mICR7ZGF0YS5uYW1lUGxhY2V9YDtcblxuICAgIC8vIHNlbGVjdCBjYXJkIGFuZCBjYXJkIGVsZW1lbnQgcGFydHNcbiAgfVxuICBfZ2V0VGVtcGxhdGUgPSAoKSA9PiB7XG4gICAgcmV0dXJuIHRoaXMuX2NhcmRUZW1wbGF0ZS5jbG9uZU5vZGUodHJ1ZSk7XG4gIH07XG5cbiAgX3NldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgIC8vaGFuZGxlcnMgc2V0dGVkIGhlcmVcblxuICAgIHRoaXMuX2NhcmRMaWtlQnV0dG9uRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGUpID0+XG4gICAgICB0aGlzLl9oYW5kbGVMaWtlQnV0dG9uQ2xpY2sodGhpcy5faWQpXG4gICAgKTtcbiAgICB0aGlzLl9jYXJkVHJhc2hCdXR0b25FbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PlxuICAgICAgdGhpcy5faGFuZGxlVHJhc2hCdXR0b25DbGljayh0aGlzLl9pZClcbiAgICApO1xuXG4gICAgdGhpcy5fY2FyZEltYWdlRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT5cbiAgICAgIHRoaXMuX2hhbmRsZUNhcmRDbGljaygpXG4gICAgKTtcbiAgfVxuXG4gIGdldElzTGlrZWQoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2lzTGlrZWQoKTtcbiAgfVxuXG4gIHVwZGF0ZUxpa2VzKGxpa2VzKSB7XG4gICAgLy8gc2V0IGluc3RhbmNlIHZhcmlhYmxlXG4gICAgdGhpcy5fbGlrZXNMaXN0ID0gbGlrZXM7XG4gICAgdGhpcy5fcmVuZGVyTGlrZXMoKTtcbiAgfVxuXG4gIF9pc0xpa2VkKCkge1xuICAgIC8vIHJldHVybiB0cnVlIGlmIHVzZXIgbGlrZWQgdGhlIGNhcmQsIG90aGVyd2lzZSBmYWxzZVxuICAgIHJldHVybiB0aGlzLl9saWtlc0xpc3Quc29tZSgocGVyc29uKSA9PiBwZXJzb24uX2lkID09PSB0aGlzLl91c2VySWQpO1xuICB9XG5cbiAgX3JlbmRlckxpa2VzKCkge1xuICAgIGNvbnN0IGxpa2VzQ291bnQgPSB0aGlzLl9saWtlc0xpc3QubGVuZ3RoO1xuICAgIHRoaXMuX2NhcmRMaWtlc0NvdW50ZXJFbGVtZW50LnRleHRDb250ZW50ID0gbGlrZXNDb3VudDtcblxuICAgIGlmICh0aGlzLl9pc0xpa2VkKCkpIHtcbiAgICAgIHRoaXMuX2NhcmRMaWtlQnV0dG9uRWxlbWVudC5jbGFzc0xpc3QuYWRkKFxuICAgICAgICBcInBob3RvLWdyaWRfX2xpa2UtYnV0dG9uX2FjdGl2ZVwiXG4gICAgICApO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLl9jYXJkTGlrZUJ1dHRvbkVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZShcbiAgICAgICAgXCJwaG90by1ncmlkX19saWtlLWJ1dHRvbl9hY3RpdmVcIlxuICAgICAgKTtcbiAgICB9XG4gIH1cblxuICBnZW5lcmF0ZUNhcmQoKSB7XG4gICAgdGhpcy5fZWxlbWVudCA9IHRoaXMuX2dldFRlbXBsYXRlKCk7XG4gICAgdGhpcy5fY2FyZFRpdGxlRWxlbWVudCA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5waG90by1ncmlkX190aXRsZVwiKTtcblxuICAgIHRoaXMuX2NhcmRJbWFnZUVsZW1lbnQgPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucGhvdG8tZ3JpZF9faW1hZ2VcIik7XG4gICAgdGhpcy5fY2FyZExpa2VCdXR0b25FbGVtZW50ID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKFxuICAgICAgXCIucGhvdG8tZ3JpZF9fbGlrZS1idXR0b25cIlxuICAgICk7XG4gICAgdGhpcy5fY2FyZFRyYXNoQnV0dG9uRWxlbWVudCA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcbiAgICAgIFwiLnBob3RvLWdyaWRfX2RlbGV0ZS1idXR0b25cIlxuICAgICk7XG5cbiAgICB0aGlzLl9jYXJkTGlrZXNDb3VudGVyRWxlbWVudCA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcbiAgICAgIFwiLnBob3RvLWdyaWRfX2xpa2VzLWNvdW50ZXJcIlxuICAgICk7XG5cbiAgICB0aGlzLl9jYXJkSW1hZ2VFbGVtZW50LnNyYyA9IHRoaXMuX2xpbms7XG4gICAgdGhpcy5fY2FyZEltYWdlRWxlbWVudC5hbHQgPSB0aGlzLl9uYW1lO1xuICAgIHRoaXMuX2NhcmRUaXRsZUVsZW1lbnQudGV4dENvbnRlbnQgPSB0aGlzLl9uYW1lO1xuXG4gICAgdGhpcy5fc2V0RXZlbnRMaXN0ZW5lcnMoKTtcblxuICAgIGlmICh0aGlzLl9vd25lcklkICE9PSB0aGlzLl91c2VySWQpIHtcbiAgICAgIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5waG90by1ncmlkX19kZWxldGUtYnV0dG9uXCIpLnJlbW92ZSgpO1xuICAgIH1cblxuICAgIC8qICAgICBpZiAodGhpcy5faXNMaWtlZCkge1xuICAgICAgdGhpcy5yZW5kZXJMaWtlKHRoaXMuX2xpa2VzTGlzdCk7XG4gICAgfSovXG4gICAgdGhpcy5fcmVuZGVyTGlrZXMoKTtcbiAgICAvL3RoaXMuX2NhcmRMaWtlc0NvdW50ZXJFbGVtZW50LnRleHRDb250ZW50ID0gbGlrZXNDb3VudDtcblxuICAgIHJldHVybiB0aGlzLl9lbGVtZW50O1xuICB9XG5cbiAgcmVtb3ZlQ2FyZCgpIHtcbiAgICB0aGlzLl9lbGVtZW50LnJlbW92ZSgpO1xuICAgIHRoaXMuX2VsZW1lbnQgPSBudWxsO1xuICB9XG59XG4iLCJjbGFzcyBGb3JtVmFsaWRhdG9yIHtcbiAgY29uc3RydWN0b3IoY29uZmlnLCBmb3JtRWwpIHtcbiAgICB0aGlzLl9jb25maWcgPSB7IC4uLmNvbmZpZyB9O1xuXG4gICAgdGhpcy5fZWxlbWVudCA9IGZvcm1FbDsgLy9teSBmb3JtIGlzIGhlcmVcblxuICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQgPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXG4gICAgICB0aGlzLl9jb25maWcuc3VibWl0QnV0dG9uU2VsZWN0b3JcbiAgICApO1xuICAgIHRoaXMuX2lucHV0TGlzdCA9IEFycmF5LmZyb20oXG4gICAgICB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3JBbGwodGhpcy5fY29uZmlnLmlucHV0U2VsZWN0b3IpXG4gICAgKTtcbiAgfVxuXG4gIF90b2dnbGVCdXR0b24oKSB7XG4gICAgaWYgKHRoaXMuX2hhc1ZhbGlkSW5wdXRzKCkpIHtcbiAgICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQuZGlzYWJsZWQgPSBmYWxzZTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5fYnV0dG9uRWxlbWVudC5kaXNhYmxlZCA9IHRydWU7XG4gICAgfVxuICB9XG5cbiAgX2hhc1ZhbGlkSW5wdXRzKCkge1xuICAgIHJldHVybiB0aGlzLl9pbnB1dExpc3QuZXZlcnkoKGlucHV0KSA9PiBpbnB1dC52YWxpZGl0eS52YWxpZCA9PT0gdHJ1ZSk7XG4gIH1cblxuICBfc2V0RXZlbnRMaXN0ZW5lcnMgPSAoKSA9PiB7XG4gICAgdGhpcy5fdG9nZ2xlQnV0dG9uKCk7XG5cbiAgICB0aGlzLl9pbnB1dExpc3QuZm9yRWFjaCgoaW5wdXQpID0+IHtcbiAgICAgIGlucHV0LmFkZEV2ZW50TGlzdGVuZXIoXCJpbnB1dFwiLCAoKSA9PiB7XG4gICAgICAgIHRoaXMuX9GBaGVja0lucHV0VmFsaWRpdHkoaW5wdXQpO1xuICAgICAgICB0aGlzLl90b2dnbGVCdXR0b24oKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9O1xuXG4gIF9zaG93SW5wdXRFcnJvciA9IChpbnB1dCkgPT4ge1xuICAgIGNvbnN0IGVycm9yU3BhbiA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihgIyR7aW5wdXQuaWR9LWVycm9yYCk7XG5cbiAgICBlcnJvclNwYW4udGV4dENvbnRlbnQgPSBpbnB1dC52YWxpZGF0aW9uTWVzc2FnZTtcbiAgICBlcnJvclNwYW4uY2xhc3NMaXN0LmFkZCh0aGlzLl9jb25maWcuZXJyb3JDbGFzcyk7XG4gICAgaW5wdXQuY2xhc3NMaXN0LmFkZCh0aGlzLl9jb25maWcuaW5wdXRFcnJvckNsYXNzKTtcbiAgfTtcblxuICBfaGlkZUlucHV0RXJyb3IgPSAoaW5wdXQpID0+IHtcbiAgICBjb25zdCBlcnJvclNwYW4gPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoYCMke2lucHV0LmlkfS1lcnJvcmApO1xuXG4gICAgZXJyb3JTcGFuLnRleHRDb250ZW50ID0gXCJcIjtcbiAgICBlcnJvclNwYW4uY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9jb25maWcuZXJyb3JDbGFzcyk7XG4gICAgaW5wdXQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9jb25maWcuaW5wdXRFcnJvckNsYXNzKTtcbiAgfTtcblxuICBf0YFoZWNrSW5wdXRWYWxpZGl0eSA9IChpbnB1dCkgPT4ge1xuICAgIGlmIChpbnB1dC52YWxpZGl0eS52YWxpZCkge1xuICAgICAgdGhpcy5faGlkZUlucHV0RXJyb3IoaW5wdXQpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLl9zaG93SW5wdXRFcnJvcihpbnB1dCk7XG4gICAgfVxuICB9O1xuXG4gIGVuYWJsZVZhbGlkYXRpb24oKSB7XG4gICAgLy9QdWJsaWMgaW5pdCBlbnRyeSBwb2ludCBvZiB0aGUgY2xhc3NcbiAgICB0aGlzLl9lbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKGV2ZW50KSA9PiB7XG4gICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIH0pO1xuXG4gICAgdGhpcy5fc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbiAgfVxuXG4gIHJlc2V0VmFsaWRhdGlvbigpIHtcbiAgICB0aGlzLl9lbGVtZW50LnJlc2V0KCk7XG4gICAgdGhpcy5faW5wdXRMaXN0LmZvckVhY2goKGlucHV0KSA9PiB7XG4gICAgICB0aGlzLl9oaWRlSW5wdXRFcnJvcihpbnB1dCk7XG4gICAgfSk7XG4gICAgLy8gdGhpcy5fZWxlbWVudC5yZXNldCgpO1xuICAgIHRoaXMuX3RvZ2dsZUJ1dHRvbigpO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IEZvcm1WYWxpZGF0b3I7XG4iLCJjb25zdCBkZWZhdWx0Rm9ybUNvbmZpZyA9IHtcclxuICBpbnB1dFNlbGVjdG9yOiBcIi5mb3JtX19pbnB1dFwiLFxyXG4gIHN1Ym1pdEJ1dHRvblNlbGVjdG9yOiBcIi5mb3JtX19zdWJtaXQtYnV0dG9uXCIsXHJcbiAgaW5hY3RpdmVCdXR0b25DbGFzczogXCJidXR0b25fYmxvY2tlZFwiLFxyXG4gIGlucHV0RXJyb3JDbGFzczogXCJmb3JtX19pbnB1dC1lcnJvclwiLFxyXG4gIGVycm9yQ2xhc3M6IFwiZm9ybV9faW5wdXQtZXJyb3JfdmlzaWJsZVwiLFxyXG4gIC8vIGZvcm1TZWxlY3RvcjogXCIuZm9ybVwiLFxyXG59O1xyXG5cclxuY29uc3QgcG9wdXBPcGVuRWRpdFByb2ZpbGVCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gIFwiLnByb2ZpbGVfX2xpbmstY2hhbmdlX3BsYWNlX3Byb2ZpbGVcIlxyXG4pO1xyXG5jb25zdCBuZXdDYXJkQnV0dG9uRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fbGluay1hZGRcIik7XHJcblxyXG5jb25zdCBwb3B1cE9wZW5FZGl0QXZhdGFyTGluayA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXHJcbiAgXCIucHJvZmlsZV9fbGluay1jaGFuZ2VfcGxhY2VfaW1hZ2VcIlxyXG4pO1xyXG5cclxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cclxuLyogICAgICAgICAgICAgICAgICAgICBJTklUSUFMIHZhcmlhYmxlcyBmb3IgcHJvZmlsZSBlZGl0ICAgICAgICAgICAgICAgICAgICAgKi9cclxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cclxuY29uc3QgbmFtZUVsZW1lbnRTZWxlY3RvciA9IFwiLnByb2ZpbGVfX25hbWVcIjtcclxuLy9jb25zdCBuYW1lRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IobmFtZUVsZW1lbnRTZWxlY3Rvcik7XHJcbmNvbnN0IG5hbWVJbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZm9ybV9faW5wdXRfdHlwZV9uYW1lXCIpOyAvL3BvcHVwIGZvcm1cclxuY29uc3Qgcm9sZUVsZW1lbnRTZWxlY3RvciA9IFwiLnByb2ZpbGVfX3JvbGVcIjtcclxuY29uc3Qgcm9sZUVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHJvbGVFbGVtZW50U2VsZWN0b3IpO1xyXG5jb25zdCByb2xlSW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmZvcm1fX2lucHV0X3R5cGVfcm9sZVwiKTtcclxuY29uc3QgYXZhdGFyRWxlbWVudFNlbGVjdG9yID0gXCIucHJvZmlsZV9fcGhvdG9cIjtcclxuXHJcbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXHJcbi8qICAgICAgICAgICAgICAgICAgICAgICAgUG9wdXAgQUREIGNhcmQgZnVuY3Rpb25hbGl0eSAgICAgICAgICAgICAgICAgICAgICAgICovXHJcbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXHJcbmNvbnN0IHVzZXJJbnB1dEltYWdlVGl0bGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gIFwiLmZvcm1fX2lucHV0X3R5cGVfaW1hZ2UtdGl0bGVcIlxyXG4pO1xyXG5jb25zdCB1c2VySW5wdXRJbWFnZUxpbmsgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gIFwiLmZvcm1fX2lucHV0X3R5cGVfaW1hZ2UtbGlua1wiXHJcbik7XHJcblxyXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xyXG4vKiAgICAgICAgICAgICAgICAgICAgICAgICAgRXNjYXBlIGtleSB2YWx1ZSBDT05TVCAgICAgICAgICAgICAgICAgICAgICAgKi9cclxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cclxuXHJcbmNvbnN0IEVTQ19CVVRUT04gPSBcIkVzY2FwZVwiO1xyXG5cclxuZXhwb3J0IHtcclxuICBFU0NfQlVUVE9OLFxyXG4gIGRlZmF1bHRGb3JtQ29uZmlnLFxyXG4gIHBvcHVwT3BlbkVkaXRQcm9maWxlQnV0dG9uLFxyXG4gIG5ld0NhcmRCdXR0b25FbGVtZW50LFxyXG4gIHBvcHVwT3BlbkVkaXRBdmF0YXJMaW5rLFxyXG4gIG5hbWVJbnB1dCxcclxuICByb2xlSW5wdXQsXHJcbiAgbmFtZUVsZW1lbnRTZWxlY3RvcixcclxuICByb2xlRWxlbWVudFNlbGVjdG9yLFxyXG4gIHVzZXJJbnB1dEltYWdlVGl0bGUsXHJcbiAgdXNlcklucHV0SW1hZ2VMaW5rLFxyXG4gIGF2YXRhckVsZW1lbnRTZWxlY3RvcixcclxufTtcclxuIiwiaW1wb3J0IHsgRVNDX0JVVFRPTiB9IGZyb20gXCIuLi91dGlscy9jb25zdGFudHMuanNcIjtcblxuLyoqXG4gKiBAY2xhc3MgUG9wdXAgb3BlbnMgYW5kIGNsb3NlcyB0aGUgcG9wdXAgd2luZG93XG4gKiBhcyBwZXIgdGhlIGZvbGxvd2luZyByZXF1aXJlbWVudHM6XG4gKiBAY29uc3RydWN0b3IgaGFzIGEgc2luZ2xlXG4gKiBAcGFyYW0gcG9wdXBTZWxlY3RvciBpdCBpcyB0aGUgcG9wdXAgc2VsZWN0b3IuXG4gKiBJdCBzdG9yZXMgdGhlXG4gKiBwdWJsaWMgQG1ldGhvZCBvcGVuKCkgdGhhdCB3aWxsIG9wZW4gdGhlIHBvcHVwLlxuICogcHVibGljIEBtZXRob2QgY2xvc2UoKSB0aGF0IHdpbGwgY2xvc2UgdGhlIHBvcHVwLlxuICogSXQgc3RvcmVzIGFcbiAqIHByaXZhdGUgQG1ldGhvZCBfaGFuZGxlRXNjQ2xvc2UoKSB0aGF0IHByZXZlbnRzIGRlZmF1bHRcbiAqIGFuZCBzdG9yZXMgdGhlIGxvZ2ljIGZvciAgKiBjbG9zaW5nIHRoZSBwb3B1cCBieSBwcmVzc2luZyB0aGUgRXNjIGtleS5cbiAqIEl0IHN0b3JlcyBhXG4gKiBwdWJsaWMgQG1ldGhvZCBzZXRFdmVudExpc3RlbmVycygpIHRoYXQgYWRkcyBhIGNsaWNrIGV2ZW50IGxpc3RlbmVyXG4gKiAgdG8gdGhlIGNsb3NlIGljb24gb2YgdGhlIHBvcHVwLiBUaGUgbW9kYWwgd2luZG93IHNob3VsZCBhbHNvXG4gKiBjbG9zZSB3aGVuIHVzZXJzIGNsaWNrIG9uIHRoZSBzaGFkZWQgYXJlYSBhcm91bmQgdGhlIGZvcm0uXG4gKi9cblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXAge1xuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yKSB7XG4gICAgdGhpcy5fcG9wdXBFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihwb3B1cFNlbGVjdG9yKTtcbiAgICAvLyB0aGlzLnNldEV2ZW50TGlzdGVuZXJzID0gdGhpcy5zZXRFdmVudExpc3RlbmVycy5iaW5kKHRoaXMpO1xuICAgIC8vUmVzZXJ2ZWQgZm9yIGZ1dHVyZSB1c2U6IHNvbHV0aW9uIGZvciBub3QgbG9zaW5nIGNvbnRleFxuICB9XG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgIHRoaXMuX3BvcHVwRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwibW91c2Vkb3duXCIsIChldmVudCkgPT4ge1xuICAgICAgaWYgKFxuICAgICAgICBldmVudC50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKFwicG9wdXBcIikgfHxcbiAgICAgICAgZXZlbnQudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucyhcInBvcHVwX19jbG9zZS1idXR0b25cIilcbiAgICAgICAgLy8gfHwgIWV2ZW50LmNsb3Nlc3QoXCJwb3B1cFwiKVxuICAgICAgKSB7XG4gICAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIG9wZW4oKSB7XG4gICAgdGhpcy5fcG9wdXBFbGVtZW50LmNsYXNzTGlzdC5hZGQoXCJwb3B1cF9vcGVuZWRcIik7XG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgdGhpcy5faGFuZGxlRXNjQ2xvc2UpO1xuICB9XG5cbiAgY2xvc2UoKSB7XG4gICAgdGhpcy5fcG9wdXBFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoXCJwb3B1cF9vcGVuZWRcIik7XG4gICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgdGhpcy5faGFuZGxlRXNjQ2xvc2UpO1xuICB9XG5cbiAgX2hhbmRsZUVzY0Nsb3NlID0gKGV2ZW50KSA9PiB7XG4gICAgaWYgKGV2ZW50LmtleSA9PT0gRVNDX0JVVFRPTikge1xuICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICB9XG4gIH07XG59XG4iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXBcIjtcblxuLyoqXG4gKiBDcmVhdGUgUG9wdXBXaXRoRm9ybSBhcyBhIGNoaWxkIGNsYXNzIG9mIFBvcHVwLlxuICogVGhlIFBvcHVwV2l0aEZvcm0gY2xhc3MgbXVzdCBjb21wbHkgd2l0aCB0aGUgZm9sbG93aW5nIHJlcXVpcmVtZW50czpcbiAqIEl0IHRha2VzIHR3byBhcmd1bWVudHM6XG4gKiB0aGUgcG9wdXAgc2VsZWN0b3IsXG4gKiBhbmQgYSBjYWxsYmFjayBmdW5jdGlvblxuICogd2hpY2ggUG9wdXBXaXRoZ2l0IHJtIGNhbGxzIHdoZW4gdGhlIGZvcm3igJlzIHN1Ym1pdCBldmVudCBmaXJlcy5cbiAqIEl0IHN0b3JlcyBhIHByaXZhdGUgbWV0aG9kIG5hbWVkIF9nZXRJbnB1dFZhbHVlcygpLFxuICogd2hpY2ggY29sbGVjdHMgZGF0YSBmcm9tIGFsbCB0aGUgaW5wdXQgZmllbGRzIGFuZCByZXR1cm5zIHRoYXQgZGF0YSBhcyBhbiBvYmplY3QuXG4gKiBJdCBtb2RpZmllcyB0aGUgc2V0RXZlbnRMaXN0ZW5lcnMoKSBwYXJlbnQgbWV0aG9kLlxuICogVGhlIHNldEV2ZW50TGlzdGVuZXJzKCkgbWV0aG9kIG9mIHRoZSBQb3B1cFdpdGhGb3JtIGNsYXNzXG4gKiAgaGFzIHRvIGFkZCB0aGUgc3VibWl0IGV2ZW50IGhhbmRsZXIgdG8gdGhlIGZvcm0wXG4gKiAgYW5kIHRoZSBjbGljayBldmVudCBsaXN0ZW5lciB0byB0aGUgY2xvc2UgaWNvbi5cbiAqIEl0IG1vZGlmaWVzIHRoZSBjbG9zZSgpIHBhcmVudCBtZXRob2RcbiAqIGluIG9yZGVyIHRvIHJlc2V0IHRoZSBmb3JtIG9uY2UgdGhlIHBvcHVwIGlzIGNsb3NlZC5cbiAqL1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhGb3JtIGV4dGVuZHMgUG9wdXAge1xuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yLCBoYW5kbGVGb3JtU3VibWl0KSB7XG4gICAgc3VwZXIocG9wdXBTZWxlY3Rvcik7XG4gICAgdGhpcy5fcG9wdXBGb3JtID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZm9ybVwiKTtcbiAgICB0aGlzLl9zdWJtaXRCdXR0b24gPSB0aGlzLl9wb3B1cEZvcm0ucXVlcnlTZWxlY3RvcihcIi5mb3JtX19zdWJtaXQtYnV0dG9uXCIpO1xuICAgIHRoaXMuaGFuZGxlRm9ybVN1Ym1pdCA9IGhhbmRsZUZvcm1TdWJtaXQ7XG4gICAgdGhpcy5faW5wdXRzQXJyYXkgPSBbLi4udGhpcy5fcG9wdXBGb3JtLnF1ZXJ5U2VsZWN0b3JBbGwoXCIuZm9ybV9faW5wdXRcIildO1xuICB9XG5cbiAgcmVuZGVyTG9hZGluZyhpc0xvYWRpbmcpIHtcbiAgICBpZiAoaXNMb2FkaW5nKSB7XG4gICAgICB0aGlzLl9zdWJtaXRCdXR0b24udGV4dENvbnRlbnQgPSBcIlNhdmluZy4uLlwiO1xuICAgICAgdGhpcy5fc3VibWl0QnV0dG9uLmRpc2FibGVkID0gdHJ1ZTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5fc3VibWl0QnV0dG9uLnRleHRDb250ZW50ID0gXCJTYXZlXCI7XG4gICAgICB0aGlzLl9zdWJtaXRCdXR0b24uZGlzYWJsZWQgPSBmYWxzZTtcbiAgICB9XG4gIH1cblxuICBnZXRQb3B1cEZvcm0oKSB7XG4gICAgcmV0dXJuIHRoaXMuX3BvcHVwRm9ybTtcbiAgfVxuICBfZ2V0SW5wdXRWYWx1ZXMoKSB7XG4gICAgY29uc3QgaW5wdXRWYWx1ZXMgPSB7fTtcbiAgICB0aGlzLl9pbnB1dHNBcnJheS5mb3JFYWNoKChpbnB1dCkgPT4ge1xuICAgICAgaW5wdXRWYWx1ZXNbaW5wdXQubmFtZV0gPSBpbnB1dC52YWx1ZTtcbiAgICB9KTtcblxuICAgIHJldHVybiBpbnB1dFZhbHVlcztcbiAgfVxuXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgIHN1cGVyLnNldEV2ZW50TGlzdGVuZXJzKCk7XG5cbiAgICB0aGlzLl9wb3B1cEZvcm0uYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCAoKSA9PiB7XG4gICAgICB0aGlzLmhhbmRsZUZvcm1TdWJtaXQodGhpcy5fZ2V0SW5wdXRWYWx1ZXMoKSk7XG4gICAgfSk7XG4gIH1cblxuICBjbG9zZSgpIHtcbiAgICBzdXBlci5jbG9zZSgpO1xuICAgIHRoaXMuX3BvcHVwRm9ybS5yZXNldCgpO1xuICB9XG59XG4iLCIvKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLyogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBNYWluIHNjcmlwdHMgZmlsZSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKi9cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4vKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgSW1wb3J0cyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbmltcG9ydCBcIi4vaW5kZXguY3NzXCI7XG5pbXBvcnQgQ2FyZCBmcm9tIFwiLi4vY29tcG9uZW50cy9DYXJkLmpzXCI7XG5pbXBvcnQgRm9ybVZhbGlkYXRvciBmcm9tIFwiLi4vY29tcG9uZW50cy9Gb3JtVmFsaWRhdG9yLmpzXCI7XG5pbXBvcnQgU2VjdGlvbiBmcm9tIFwiLi4vY29tcG9uZW50cy9TZWN0aW9uLmpzXCI7XG5pbXBvcnQgUG9wdXBXaXRoSW1hZ2UgZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanNcIjtcbmltcG9ydCBQb3B1cFdpdGhGb3JtIGZyb20gXCIuLi9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanNcIjtcbmltcG9ydCBQb3B1cFdpdGhTdWJtaXQgZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXBXaXRoU3VibWl0XCI7XG5pbXBvcnQgVXNlckluZm8gZnJvbSBcIi4uL2NvbXBvbmVudHMvVXNlckluZm8uanNcIjtcbmltcG9ydCBBcGkgZnJvbSBcIi4uL2NvbXBvbmVudHMvQXBpXCI7XG4vL2ltcG9ydCB7IGluaXRpYWxDYXJkcyB9IGZyb20gXCIuLi91dGlscy9jYXJkcy5qc1wiO1xuaW1wb3J0IHtcbiAgZGVmYXVsdEZvcm1Db25maWcsXG4gIHBvcHVwT3BlbkVkaXRQcm9maWxlQnV0dG9uLFxuICBuZXdDYXJkQnV0dG9uRWxlbWVudCxcbiAgbmFtZUlucHV0LFxuICByb2xlSW5wdXQsXG4gIG5hbWVFbGVtZW50U2VsZWN0b3IsXG4gIHJvbGVFbGVtZW50U2VsZWN0b3IsXG4gIHBvcHVwT3BlbkVkaXRBdmF0YXJMaW5rLFxuICBhdmF0YXJFbGVtZW50U2VsZWN0b3IsXG59IGZyb20gXCIuLi91dGlscy9jb25zdGFudHMuanNcIjtcblxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi8qICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFdyYXBwZXJzICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuXG4vLyBzZWxlY3RpbmcgY2FyZCB0ZW1wbGF0ZSBlbGVtZW50XG5jb25zdCBjYXJkVGVtcGxhdGVFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNjYXJkLXRlbXBsYXRlXCIpO1xuXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLyogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIERlY2xhcmF0aW9ucyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKi9cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG5cbmxldCB1c2VySWQ7XG5cbi8qKlxuICogQGZ1bmN0aW9uIHJlbmRlckNhcmQgY3JlYXRlcyBDYXJkIG9iamVjdCB3aXRoIGRhdGEgcGFyYW0gYW5kIHdpdGggdGVtcGxhdGUgaGFyZGNvZGVkXG4gKiBAcGFyYW0ge2FycmF5fSBkYXRhIGNvbnRhaW5zIHtuYW1lLCBsaW5rfVxuICogQHBhcmFtIHt0ZXh0fSBjYXJkVGVtcGxhdGVFbGVtZW50IGNvbnRhaW5zIHRleHQgaWQgb2YgY2FyZCBlbGVtZW50IHRvIGJlIGNsb25lZFxuICogQHBhcmFtIHtBcnJvdyBmdW5jdGlvbn0gaXMgY2FyZENsaWNrIGhhbmRsZXIgZm9yIG9wZW5pbmcgUG9wdXBXaXRoSW1hZ2VcbiAqL1xuY29uc3QgcmVuZGVyQ2FyZCA9IChkYXRhKSA9PiB7XG4gIGNvbnN0IGNhcmQgPSBuZXcgQ2FyZChcbiAgICBkYXRhLFxuICAgIGNhcmRUZW1wbGF0ZUVsZW1lbnQsXG4gICAgKCkgPT4ge1xuICAgICAgaW1hZ2VQb3B1cC5vcGVuKGRhdGEubGlua1BsYWNlLCBkYXRhLm5hbWVQbGFjZSk7XG4gICAgfSxcbiAgICAoaWQpID0+IHtcbiAgICAgIGNvbmZpcm1Nb2RhbC5vcGVuKCk7XG4gICAgICBjb25maXJtTW9kYWxcbiAgICAgICAgLnNldEFjdGlvbigoKSA9PiB7XG4gICAgICAgICAgY29uZmlybU1vZGFsLnJlbmRlckxvYWRpbmcodHJ1ZSk7XG4gICAgICAgICAgYXBpLmRlbGV0ZUNhcmQoaWQpLnRoZW4oKHJlcykgPT4ge1xuICAgICAgICAgICAgY2FyZC5yZW1vdmVDYXJkKCk7XG4gICAgICAgICAgICBjb25maXJtTW9kYWwuY2xvc2UoKTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSlcbiAgICAgICAgLmNhdGNoKChlcnJvcikgPT4ge1xuICAgICAgICAgIC8vIGVycm9yXG4gICAgICAgICAgY29uc29sZS5sb2coZXJyb3IpO1xuICAgICAgICB9KVxuICAgICAgICAuZmluYWxseSgoKSA9PiB7XG4gICAgICAgICAgLy8gZW5kIGxvYWRpbmdcbiAgICAgICAgICBjb25maXJtTW9kYWwucmVuZGVyTG9hZGluZyhmYWxzZSk7XG4gICAgICAgIH0pO1xuICAgIH0sXG4gICAgKGlkKSA9PiB7XG4gICAgICBjb25zdCBpc0FscmVhZHlMaWtlZCA9IGNhcmQuZ2V0SXNMaWtlZCgpO1xuICAgICAgaWYgKGlzQWxyZWFkeUxpa2VkKSB7XG4gICAgICAgIGFwaVxuICAgICAgICAgIC5kaXNMaWtlQ2FyZChpZClcbiAgICAgICAgICAudGhlbigocmVzKSA9PiB7XG4gICAgICAgICAgICBjYXJkLnVwZGF0ZUxpa2VzKHJlcy5saWtlcyk7XG4gICAgICAgICAgfSlcbiAgICAgICAgICAuY2F0Y2goKGVycm9yKSA9PiB7XG4gICAgICAgICAgICAvLyBlcnJvclxuICAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3IpO1xuICAgICAgICAgIH0pXG4gICAgICAgICAgLmZpbmFsbHkoKCkgPT4ge1xuICAgICAgICAgICAgLy8gZW5kIGxvYWRpbmdcbiAgICAgICAgICAgIGNvbmZpcm1Nb2RhbC5yZW5kZXJMb2FkaW5nKGZhbHNlKTtcbiAgICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGFwaVxuICAgICAgICAgIC5saWtlQ2FyZChpZClcbiAgICAgICAgICAudGhlbigocmVzKSA9PiB7XG4gICAgICAgICAgICBjYXJkLnVwZGF0ZUxpa2VzKHJlcy5saWtlcyk7XG4gICAgICAgICAgfSlcbiAgICAgICAgICAuY2F0Y2goKGVycm9yKSA9PiB7XG4gICAgICAgICAgICAvLyBlcnJvclxuICAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3IpO1xuICAgICAgICAgIH0pXG4gICAgICAgICAgLmZpbmFsbHkoKCkgPT4ge1xuICAgICAgICAgICAgLy8gZW5kIGxvYWRpbmdcbiAgICAgICAgICAgIGNvbmZpcm1Nb2RhbC5yZW5kZXJMb2FkaW5nKGZhbHNlKTtcbiAgICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG4gICk7XG5cbiAgcmV0dXJuIGNhcmQuZ2VuZXJhdGVDYXJkKCk7XG59O1xuXG5jb25zdCBhcGkgPSBuZXcgQXBpKHtcbiAgYmFzZVVybDogXCJodHRwczovL2Fyb3VuZC5ub21vcmVwYXJ0aWVzLmNvL3YxL2dyb3VwLTEyXCIsXG4gIGhlYWRlcnM6IHtcbiAgICBhdXRob3JpemF0aW9uOiBcImNmYmQ3NzA3LWExMTAtNDRhZS04YWE4LTYzMDI5NmY1M2M2NlwiLFxuICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICB9LFxufSk7XG5cbmNvbnN0IGNhcmRMaXN0U2VjdGlvbiA9IG5ldyBTZWN0aW9uKFxuICB7IGl0ZW1zOiBbXSwgcmVuZGVyZXI6IHJlbmRlckNhcmQgfSxcbiAgXCIucGhvdG8tZ3JpZF9fbGlzdFwiXG4pO1xuXG5hcGlcbiAgLmdldFVzZXJJbmZvKClcbiAgLnRoZW4oKHJlcykgPT4ge1xuICAgIHVzZXJJbmZvLnNldFVzZXJJbmZvKHtcbiAgICAgIHByb2ZpbGVGb3JtTmFtZUlucHV0OiByZXMubmFtZSxcbiAgICAgIHByb2ZpbGVGb3JtUm9sZUlucHV0OiByZXMuYWJvdXQsXG4gICAgICBhdmF0YXJMaW5rOiByZXMuYXZhdGFyLFxuICAgIH0pO1xuICB9KVxuICAuY2F0Y2goKGVycm9yKSA9PiB7XG4gICAgLy8gZXJyb3JcbiAgICBjb25zb2xlLmxvZyhlcnJvcik7XG4gIH0pO1xuXG5mdW5jdGlvbiBoYW5kbGVBdmF0YXJGb3JtU3VibWl0KGRhdGEpIHtcbiAgZWRpdEF2YXRhclBvcHVwLnJlbmRlckxvYWRpbmcodHJ1ZSk7XG4gIGNvbnN0IHVzZXJEYXRhID0gZGF0YS5uYW1lO1xuXG4gIGFwaVxuICAgIC5zZXRBdmF0YXJMaW5rKHVzZXJEYXRhKVxuICAgIC50aGVuKChyZXMpID0+IHtcbiAgICAgIC8vIHVwZGF0ZSBkYXRhXG4gICAgICB1c2VySW5mby5zZXRVc2VyQXZhdGFyKHJlcyk7XG4gICAgICAvLyBjbG9zZSBwb3B1cCBpZiBuZWNlc3NhcnlcbiAgICAgIGVkaXRBdmF0YXJQb3B1cC5jbG9zZSgpO1xuICAgIH0pXG4gICAgLmNhdGNoKChlcnJvcikgPT4ge1xuICAgICAgLy8gZXJyb3JcbiAgICAgIGNvbnNvbGUubG9nKGVycm9yKTtcbiAgICB9KVxuICAgIC5maW5hbGx5KCgpID0+IHtcbiAgICAgIC8vIGVuZCBsb2FkaW5nXG4gICAgICBlZGl0QXZhdGFyUG9wdXAucmVuZGVyTG9hZGluZyhmYWxzZSk7XG4gICAgfSk7XG59XG5cblByb21pc2UuYWxsKFthcGkuZ2V0SW5pdGlhbENhcmRzKCksIGFwaS5nZXRVc2VySW5mbygpXSlcbiAgLnRoZW4oKFtjYXJkRGF0YSwgdXNlckRhdGFdKSA9PiB7XG4gICAgdXNlcklkID0gdXNlckRhdGEuX2lkO1xuICAgIGNvbnN0IGNhcmRzID0gW107XG4gICAgY2FyZERhdGEuZm9yRWFjaCgoZWxlbWVudCkgPT4ge1xuICAgICAgY29uc3QgZW50cnkgPSB7XG4gICAgICAgIGNyZWF0ZWRBdDogZWxlbWVudC5jcmVhdGVkQXQsXG4gICAgICAgIG5hbWVQbGFjZTogZWxlbWVudC5uYW1lLFxuICAgICAgICBfaWQ6IGVsZW1lbnQuX2lkLFxuICAgICAgICBsaW5rUGxhY2U6IGVsZW1lbnQubGluayxcbiAgICAgICAgb3duZXI6IGVsZW1lbnQub3duZXIsXG4gICAgICAgIGxpa2VzOiBlbGVtZW50Lmxpa2VzLFxuICAgICAgICB1c2VyX2lkOiB1c2VySWQsXG4gICAgICB9O1xuICAgICAgY2FyZHMucHVzaChlbnRyeSk7XG4gICAgfSk7XG5cbiAgICBjYXJkTGlzdFNlY3Rpb24ucmVuZGVySXRlbXMoY2FyZHMpO1xuICB9KVxuICAuY2F0Y2goKGVycm9yKSA9PiB7XG4gICAgLy8gZXJyb3JcbiAgICBjb25zb2xlLmxvZyhlcnJvcik7XG4gIH0pO1xuXG5mdW5jdGlvbiBoYW5kbGVFZGl0Rm9ybVN1Ym1pdChkYXRhKSB7XG4gIC8vIHNob3cgbG9hZGluZ1xuICBlZGl0UHJvZmlsZVBvcHVwLnJlbmRlckxvYWRpbmcodHJ1ZSk7XG5cbiAgLy8gYXBpIHJlcXVlc3RcbiAgYXBpXG4gICAgLnNldFVzZXJJbmZvKHtcbiAgICAgIG5hbWU6IGRhdGEucHJvZmlsZUZvcm1OYW1lSW5wdXQsXG4gICAgICBhYm91dDogZGF0YS5wcm9maWxlRm9ybVJvbGVJbnB1dCxcbiAgICB9KVxuICAgIC50aGVuKChyZXMpID0+IHtcbiAgICAgIC8vIHVwZGF0ZSBkYXRhXG4gICAgICB1c2VySW5mby5zZXRVc2VySW5mbyh7XG4gICAgICAgIHByb2ZpbGVGb3JtTmFtZUlucHV0OiByZXMubmFtZSxcbiAgICAgICAgcHJvZmlsZUZvcm1Sb2xlSW5wdXQ6IHJlcy5hYm91dCxcbiAgICAgICAgYXZhdGFyTGluazogcmVzLmF2YXRhcixcbiAgICAgIH0pO1xuICAgICAgLy8gY2xvc2UgcG9wdXAgaWYgbmVjZXNzYXJ5XG4gICAgICBlZGl0UHJvZmlsZVBvcHVwLmNsb3NlKCk7XG4gICAgfSlcbiAgICAuY2F0Y2goKGVycm9yKSA9PiB7XG4gICAgICAvLyBlcnJvclxuICAgICAgY29uc29sZS5sb2coZXJyb3IpO1xuICAgIH0pXG4gICAgLmZpbmFsbHkoKCkgPT4ge1xuICAgICAgLy8gZW5kIGxvYWRpbmdcbiAgICAgIGVkaXRQcm9maWxlUG9wdXAucmVuZGVyTG9hZGluZyhmYWxzZSk7XG4gICAgfSk7XG59XG5cbmZ1bmN0aW9uIGhhbmRsZU5ld0NhcmRGb3JtU3VibWl0KGRhdGEpIHtcbiAgLy8gc2hvdyBsb2FkaW5nXG4gIGFkZENhcmRQb3B1cC5yZW5kZXJMb2FkaW5nKHRydWUpO1xuXG4gIGFwaVxuICAgIC5jcmVhdGVDYXJkKHsgbmFtZTogZGF0YS5uYW1lUGxhY2UsIGxpbms6IGRhdGEubGlua1BsYWNlIH0pXG4gICAgLnRoZW4oKHJlcykgPT4ge1xuICAgICAgLy8gdXBkYXRlIGRhdGFcbiAgICAgIGNhcmRMaXN0U2VjdGlvbi5hZGRJdGVtKFxuICAgICAgICByZW5kZXJDYXJkKHtcbiAgICAgICAgICBuYW1lUGxhY2U6IHJlcy5uYW1lLFxuICAgICAgICAgIGxpbmtQbGFjZTogcmVzLmxpbmssXG4gICAgICAgICAgX2lkOiByZXMuX2lkLFxuICAgICAgICAgIG93bmVyOiByZXMub3duZXIsXG4gICAgICAgICAgdXNlcl9pZDogdXNlcklkLFxuICAgICAgICAgIGxpa2VzOiByZXMubGlrZXMsXG4gICAgICAgIH0pXG4gICAgICApO1xuICAgICAgYWRkQ2FyZFBvcHVwLmNsb3NlKCk7XG4gICAgfSlcblxuICAgIC5jYXRjaCgoZXJyb3IpID0+IHtcbiAgICAgIC8vIGVycm9yXG4gICAgICBjb25zb2xlLmxvZyhlcnJvcik7XG4gICAgfSlcbiAgICAuZmluYWxseSgoKSA9PiB7XG4gICAgICAvLyBlbmQgbG9hZGluZ1xuICAgICAgYWRkQ2FyZFBvcHVwLnJlbmRlckxvYWRpbmcoZmFsc2UpO1xuICAgIH0pO1xufVxuXG5jb25zdCB1c2VySW5mbyA9IG5ldyBVc2VySW5mbyhcbiAgbmFtZUVsZW1lbnRTZWxlY3RvcixcbiAgcm9sZUVsZW1lbnRTZWxlY3RvcixcbiAgYXZhdGFyRWxlbWVudFNlbGVjdG9yXG4pO1xuXG5jb25zdCBlZGl0UHJvZmlsZVBvcHVwID0gbmV3IFBvcHVwV2l0aEZvcm0oXG4gIFwiLnBvcHVwX3R5cGVfZWRpdC1wcm9maWxlXCIsXG4gIGhhbmRsZUVkaXRGb3JtU3VibWl0XG4pO1xuY29uc3QgYWRkQ2FyZFBvcHVwID0gbmV3IFBvcHVwV2l0aEZvcm0oXG4gIFwiLnBvcHVwX3R5cGVfbmV3LWNhcmRcIixcbiAgaGFuZGxlTmV3Q2FyZEZvcm1TdWJtaXRcbik7XG5cbmNvbnN0IGVkaXRBdmF0YXJQb3B1cCA9IG5ldyBQb3B1cFdpdGhGb3JtKFxuICBcIi5wb3B1cF90eXBlX2F2YXRhci1jaGFuZ2VcIixcbiAgaGFuZGxlQXZhdGFyRm9ybVN1Ym1pdFxuKTtcblxuY29uc3QgaW1hZ2VQb3B1cCA9IG5ldyBQb3B1cFdpdGhJbWFnZShcIi5wb3B1cF90eXBlX3ByZXZpZXdcIik7XG5jb25zdCBjb25maXJtTW9kYWwgPSBuZXcgUG9wdXBXaXRoU3VibWl0KFwiLnBvcHVwX3R5cGVfY29uZmlybS1kZWxldGUtY2FyZFwiKTtcblxuY29uc3QgYWRkQ2FyZEZvcm0gPSBuZXcgRm9ybVZhbGlkYXRvcihcbiAgZGVmYXVsdEZvcm1Db25maWcsXG4gIGFkZENhcmRQb3B1cC5nZXRQb3B1cEZvcm0oKVxuKTtcbmNvbnN0IGVkaXRGb3JtID0gbmV3IEZvcm1WYWxpZGF0b3IoXG4gIGRlZmF1bHRGb3JtQ29uZmlnLFxuICBlZGl0UHJvZmlsZVBvcHVwLmdldFBvcHVwRm9ybSgpXG4pO1xuXG5jb25zdCBlZGl0QXZhdGFyRm9ybSA9IG5ldyBGb3JtVmFsaWRhdG9yKFxuICBkZWZhdWx0Rm9ybUNvbmZpZyxcbiAgZWRpdEF2YXRhclBvcHVwLmdldFBvcHVwRm9ybSgpXG4pO1xuXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLyogICAgICAgICAgICAgICAgICAgICAgICAgUG9wdXAgRW5hYmxlIFZhbGlkYXRpb24gICAgICAgICAgICAgICAgICAgICAgICAgICAgKi9cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG5cbmFkZENhcmRGb3JtLmVuYWJsZVZhbGlkYXRpb24oKTtcbmVkaXRGb3JtLmVuYWJsZVZhbGlkYXRpb24oKTtcbmVkaXRBdmF0YXJGb3JtLmVuYWJsZVZhbGlkYXRpb24oKTtcblxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi8qICAgICAgICAgICAgICAgICAgICAgICAgIFBvcHVwIEV2ZW50IExpc3RlbmVycyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuaW1hZ2VQb3B1cC5zZXRFdmVudExpc3RlbmVycygpO1xuXG5lZGl0UHJvZmlsZVBvcHVwLnNldEV2ZW50TGlzdGVuZXJzKCk7XG5cbmFkZENhcmRQb3B1cC5zZXRFdmVudExpc3RlbmVycygpO1xuXG5jb25maXJtTW9kYWwuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbmVkaXRBdmF0YXJQb3B1cC5zZXRFdmVudExpc3RlbmVycygpO1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi8qICAgICAgICAgICAgICAgICAgIE9wZW4gUG9wdXAgQnV0dG9ucyBsaXN0ZW5lcnMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuXG5mdW5jdGlvbiBmaWxsUHJvZmlsZUZvcm0oeyBuYW1lLCBqb2IgfSkge1xuICBuYW1lSW5wdXQudmFsdWUgPSBuYW1lO1xuICByb2xlSW5wdXQudmFsdWUgPSBqb2I7XG59XG5cbnBvcHVwT3BlbkVkaXRQcm9maWxlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gIGVkaXRQcm9maWxlUG9wdXAub3BlbigpO1xuICBlZGl0Rm9ybS5yZXNldFZhbGlkYXRpb24oKTtcblxuICBmaWxsUHJvZmlsZUZvcm0odXNlckluZm8uZ2V0VXNlckluZm8oKSk7XG59KTtcblxubmV3Q2FyZEJ1dHRvbkVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgYWRkQ2FyZFBvcHVwLm9wZW4oKTtcbiAgYWRkQ2FyZEZvcm0ucmVzZXRWYWxpZGF0aW9uKCk7XG59KTtcblxucG9wdXBPcGVuRWRpdEF2YXRhckxpbmsuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgZWRpdEF2YXRhclBvcHVwLm9wZW4oKTtcbiAgZWRpdEF2YXRhckZvcm0ucmVzZXRWYWxpZGF0aW9uKCk7XG59KTtcbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIEFwaSB7XG4gIGNvbnN0cnVjdG9yKHsgYmFzZVVybCwgaGVhZGVycyB9KSB7XG4gICAgdGhpcy5fYmFzZVVybCA9IGJhc2VVcmw7XG4gICAgdGhpcy5faGVhZGVycyA9IGhlYWRlcnM7XG4gIH1cbiAgX2N1c3RvbUZldGNoID0gYXN5bmMgKHVybCwgaGVhZGVycykgPT4ge1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2godXJsLCBoZWFkZXJzKTtcbiAgICBpZiAocmVzcG9uc2Uub2spIHtcbiAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChyZXNwb25zZS5zdGF0dXNUZXh0KTtcbiAgICB9XG4gIH07XG5cbiAgZ2V0SW5pdGlhbENhcmRzKCkge1xuICAgIHJldHVybiB0aGlzLl9jdXN0b21GZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkc2AsIHtcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXG4gICAgfSk7XG4gIH1cbiAgZ2V0VXNlckluZm8oKSB7XG4gICAgcmV0dXJuIHRoaXMuX2N1c3RvbUZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L3VzZXJzL21lYCwge1xuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcbiAgICB9KTtcbiAgfVxuXG4gIHNldEF2YXRhckxpbmsoZGF0YSkge1xuICAgIHJldHVybiB0aGlzLl9jdXN0b21GZXRjaChgJHt0aGlzLl9iYXNlVXJsfS91c2Vycy9tZS9hdmF0YXJgLCB7XG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxuICAgICAgbWV0aG9kOiBcIlBBVENIXCIsXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7IGF2YXRhcjogZGF0YSB9KSxcbiAgICB9KTtcbiAgfVxuXG4gIHNldFVzZXJJbmZvKGRhdGEpIHtcbiAgICByZXR1cm4gdGhpcy5fY3VzdG9tRmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vdXNlcnMvbWVgLCB7XG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxuICAgICAgbWV0aG9kOiBcIlBBVENIXCIsXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeShkYXRhKSxcbiAgICB9KTtcbiAgfVxuXG4gIGNyZWF0ZUNhcmQoZGF0YSkge1xuICAgIHJldHVybiB0aGlzLl9jdXN0b21GZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkc2AsIHtcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXG4gICAgICBtZXRob2Q6IFwiUE9TVFwiLFxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoZGF0YSksXG4gICAgfSk7XG4gIH1cblxuICBkZWxldGVDYXJkKGNhcmRJZCkge1xuICAgIHJldHVybiB0aGlzLl9jdXN0b21GZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkcy8ke2NhcmRJZH1gLCB7XG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxuICAgICAgbWV0aG9kOiBcIkRFTEVURVwiLFxuICAgIH0pO1xuICB9XG4gIGxpa2VDYXJkKGNhcmRJZCkge1xuICAgIHJldHVybiB0aGlzLl9jdXN0b21GZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkcy9saWtlcy8ke2NhcmRJZH1gLCB7XG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxuICAgICAgbWV0aG9kOiBcIlBVVFwiLFxuICAgIH0pO1xuICB9XG5cbiAgZGlzTGlrZUNhcmQoY2FyZElkKSB7XG4gICAgcmV0dXJuIHRoaXMuX2N1c3RvbUZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzL2xpa2VzLyR7Y2FyZElkfWAsIHtcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXG4gICAgICBtZXRob2Q6IFwiREVMRVRFXCIsXG4gICAgfSk7XG4gIH1cblxuICAvLyBvdGhlciBtZXRob2RzIGZvciB3b3JraW5nIHdpdGggdGhlIEFQSVxufVxuIiwiLyoqXG4gKiBDcmVhdGUgdGhlIFNlY3Rpb24gY2xhc3MgZm9yIHJlbmRlcmluZyBhIGxpc3Qgb2YgZWxlbWVudHMgb24gYSBwYWdlXG4gKiBhY2NvcmRpbmcgdG8gdGhlIGZvbGxvd2luZyByZXF1aXJlbWVudHM6XG4gKiBJdCBoYXMgYW4gb2JqZWN0IHdpdGggdHdvIHByb3BlcnRpZXMgKGl0ZW1zIGFuZCByZW5kZXJlcilcbiAqIGFzIHRoZSBmaXJzdCBwYXJhbWV0ZXIgb2YgdGhlIGNvbnN0cnVjdG9yLlxuICogVGhlIGl0ZW1zIHByb3BlcnR5IHNlcnZlcyBhcyBhbiBhcnJheSBvZiBkYXRhLFxuICogd2hpY2ggeW91IG5lZWQgdG8gYWRkIG9uIGEgcGFnZSB3aGVuIGluaXRpYWxpemluZyB0aGUgY2xhc3MuXG4gKiBUaGUgcmVuZGVyZXIgcHJvcGVydHkgaXMgYVxuICogZnVuY3Rpb24gcmVzcG9uc2libGUgZm9yIGNyZWF0aW5nIGFuZCByZW5kZXJpbmcgZGF0YSBvbiBhIHBhZ2UuXG4gKiBUaGUgc2Vjb25kIHBhcmFtZXRlciBzaG91bGQgYmUgYSBDU1MgY2xhc3Mgc2VsZWN0b3JcbiAqIHdoZXJlIHlvdSdsbCBhZGQgdGhlIGNhcmQgZWxlbWVudHMuXG4gKiBJdCBzdG9yZXMgYSBwdWJsaWMgbWV0aG9kIHRoYXQgcmVuZGVycyBhbGwgZWxlbWVudHMgb24gdGhlIHBhZ2UuXG4gKiBUaGUgcmVuZGVyZXIoKSBmdW5jdGlvbiB3aWxsIHJlbmRlciBlYWNoIGVsZW1lbnQgb24gYSBwYWdlLlxuICogSXQgc3RvcmVzIGEgcHVibGljIG1ldGhvZCBuYW1lZCBhZGRJdGVtKClcbiAqIHRoYXQgdGFrZXMgYSBET00gZWxlbWVudCBhbmQgYWRkcyBpdCB0byB0aGUgY29udGFpbmVyLlxuICogVGhlIFNlY3Rpb24gY2xhc3MgZG9lc24ndCBoYXZlIG1hcmt1cC5cbiAqIEl0IHJlY2VpdmVzIG1hcmt1cCB0aHJvdWdoIHRoZSBjYWxsYmFjayBmdW5jdGlvbiBhbmQgaW5zZXJ0cyBpdCBpbiB0aGUgY29udGFpbmVyXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFNlY3Rpb24ge1xuICBjb25zdHJ1Y3Rvcih7IGl0ZW1zLCByZW5kZXJlciB9LCBjb250YWluZXJTZWxlY3Rvcikge1xuICAgIHRoaXMucmVuZGVyZXIgPSByZW5kZXJlcjtcbiAgICB0aGlzLmNvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoY29udGFpbmVyU2VsZWN0b3IpO1xuICB9XG5cbiAgcmVuZGVySXRlbXMoaXRlbXMpIHtcbiAgICBpdGVtcy5mb3JFYWNoKChpdGVtKSA9PiB7XG4gICAgICB0aGlzLmFkZEl0ZW0odGhpcy5yZW5kZXJlcihpdGVtKSk7XG4gICAgfSk7XG4gIH1cblxuICBhZGRJdGVtID0gKGVsZW1lbnQpID0+IHtcbiAgICB0aGlzLmNvbnRhaW5lci5wcmVwZW5kKGVsZW1lbnQpO1xuICB9O1xufVxuIiwiLyoqVGhlIFVzZXJJbmZvIGNsYXNzIGlzIHJlc3BvbnNpYmxlIGZvclxuICogcmVuZGVyaW5nIGluZm9ybWF0aW9uIGFib3V0IHRoZSB1c2VyIG9uIHRoZSBwYWdlLlxuICogVGhpcyBjbGFzcyBzaG91bGQ6XG4gKiBUYWtlIGFuIG9iamVjdCB3aXRoIHRoZSBzZWxlY3RvcnMgb2YgdHdvIGVsZW1lbnRzIGludG8gdGhlIGNvbnN0cnVjdG9yOlxuICogb25lIGNvbnRhaW5pbmcgdGhlIHVzZXIncyBuYW1lLFxuICogYW5kIGFub3RoZXIgY29udGFpbmluZyB0aGUgdXNlcidzIGpvYi5cbiAqIFN0b3JlIGEgcHVibGljIG1ldGhvZCBuYW1lZCBnZXRVc2VySW5mbygpLFxuICogd2hpY2ggcmV0dXJucyBhbiBvYmplY3Qgd2l0aCBpbmZvcm1hdGlvbiBhYm91dCB0aGUgdXNlci5cbiAqIFRoaXMgbWV0aG9kIHdpbGwgYmUgaGFuZHkgZm9yIGNhc2VzIHdoZW4gaXQncyBuZWNlc3NhcnkgdG8gZGlzcGxheSB0aGUgdXNlciBkYXRhIGluIHRoZSBvcGVuIGZvcm0uXG4gKiBTdG9yZSBhIHB1YmxpYyBtZXRob2QgbmFtZWQgc2V0VXNlckluZm8oKSxcbiAqIHdoaWNoIHRha2VzIG5ldyB1c2VyIGRhdGEgYW5kIGFkZHMgaXQgb24gdGhlIHBhZ2UuXG4gKi9cblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVXNlckluZm8ge1xuICBjb25zdHJ1Y3RvcihuYW1lU2VsZWN0b3IsIGpvYlNlbGVjdG9yLCBhdmF0YXJTZWxlY3Rvcikge1xuICAgIHRoaXMuX25hbWVTZWxlY3RvciA9IG5hbWVTZWxlY3RvcjtcbiAgICB0aGlzLl9qb2JTZWxlY3RvciA9IGpvYlNlbGVjdG9yO1xuICAgIHRoaXMuX25hbWVFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihuYW1lU2VsZWN0b3IpO1xuICAgIHRoaXMuX2pvYkVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGpvYlNlbGVjdG9yKTtcbiAgICB0aGlzLl9hdmF0YXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGF2YXRhclNlbGVjdG9yKTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIGdldFVzZXJJbmZvKCkge1xuICAgIHJldHVybiB7XG4gICAgICBuYW1lOiB0aGlzLl9uYW1lRWxlbWVudC50ZXh0Q29udGVudCxcbiAgICAgIGpvYjogdGhpcy5fam9iRWxlbWVudC50ZXh0Q29udGVudCxcbiAgICB9O1xuICB9XG5cbiAgc2V0VXNlckluZm8oaW5mbykge1xuICAgIHRoaXMuX25hbWVFbGVtZW50LnRleHRDb250ZW50ID0gaW5mby5wcm9maWxlRm9ybU5hbWVJbnB1dDtcbiAgICB0aGlzLl9qb2JFbGVtZW50LnRleHRDb250ZW50ID0gaW5mby5wcm9maWxlRm9ybVJvbGVJbnB1dDtcbiAgICB0aGlzLl9hdmF0YXIuYWx0ID0gYEltYWdlIG9mICR7aW5mby5wcm9maWxlRm9ybU5hbWVJbnB1dH1gO1xuICAgIHRoaXMuX2F2YXRhci5zcmMgPSBpbmZvLmF2YXRhckxpbms7XG4gIH1cblxuICBzZXRVc2VyQXZhdGFyKHsgYXZhdGFyIH0pIHtcbiAgICB0aGlzLl9hdmF0YXIuc3JjID0gYXZhdGFyO1xuICB9XG59XG4iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXAuanNcIjtcblxuLyoqXG4gKiBAY2xhc3MgUG9wdXBXaXRoSW1hZ2UgYSBjaGlsZCBAY2xhc3Mgb2YgUG9wdXAuXG4gKiBUaGlzIGNsYXNzIGhhcyB0byBjaGFuZ2UgdGhlIEBwYXJlbnQgb3BlbigpIEBtZXRob2QuXG4gKiBUaGUgQG1ldGhvZCBvcGVuKCkgb2YgdGhlIFBvcHVwV2l0aEltYWdlIEBjbGFzcywgYWRkcyBhbiBpbWFnZSB0byB0aGUgcG9wdXBcbiAqIGFuZCB0aGUgY29ycmVzcG9uZGluZyBpbWFnZSBzcmMgYXR0cmlidXRlIGFsb25nIHdpdGggYSBjYXB0aW9uIGZvciB0aGUgaW1hZ2UuXG4gKlxuICogUHV0cyBcIm5hbWVcIiBmcm9tIEBhcmd1bWVudHMgdG8gdGhlIFwiLnBvcHVwX19jYXB0aW9uXCIgc2VsZWN0b3JcbiAqIGZpbmQgaW1hZ2UgYnkgdGhlIHBvcHVwX19pbWFnZVwiIHNlbGVjdG9yIHNldCBcInNyY1wiIGFuZCBcImFsdFwiIGZvciBpdFxuICogIGNhbGwgQGNsYXNzIHN1cGVyLm9wZW4sIGl0IHdpbGwgY2FsbCB0aGUgb3JpZ2luYWwgQG1ldGhvZCBmcm9tIG9yaWdpbmFsIEBjbGFzcyBQb3B1cFxuICovXG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aEltYWdlIGV4dGVuZHMgUG9wdXAge1xuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yKSB7XG4gICAgc3VwZXIocG9wdXBTZWxlY3Rvcik7XG4gICAgdGhpcy5fcHJldmlld1BvcHVwSW1hZ2UgPSB0aGlzLl9wb3B1cEVsZW1lbnQucXVlcnlTZWxlY3RvcihcbiAgICAgIFwiLnBvcHVwX19wcmV2aWV3LWltYWdlXCJcbiAgICApO1xuICAgIHRoaXMuX3ByZXZpZXdQb3B1cERlc2NyaXB0aW9uID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXG4gICAgICBcIi5wb3B1cF9fZGVzY3JpcHRpb25cIlxuICAgICk7XG4gIH1cbiAgb3BlbiA9IChsaW5rUGxhY2UsIG5hbWVQbGFjZSkgPT4ge1xuICAgIHRoaXMuX3ByZXZpZXdQb3B1cEltYWdlLnNyYyA9IGxpbmtQbGFjZTtcbiAgICB0aGlzLl9wcmV2aWV3UG9wdXBJbWFnZS5hbHQgPSBgUGljdHVyZSBvZiAke25hbWVQbGFjZX1gO1xuICAgIHRoaXMuX3ByZXZpZXdQb3B1cERlc2NyaXB0aW9uLnRleHRDb250ZW50ID0gbmFtZVBsYWNlO1xuXG4gICAgc3VwZXIub3BlbigpO1xuICB9O1xufVxuIiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwLmpzXCI7XHJcbmltcG9ydCBQb3B1cFdpdGhGb3JtIGZyb20gXCIuL1BvcHVwV2l0aEZvcm0uanNcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aFN1Ym1pdCBleHRlbmRzIFBvcHVwIHtcclxuICBzZXRBY3Rpb24oYWN0aW9uKSB7XHJcbiAgICB0aGlzLl9oYW5kbGVTdWJtaXQgPSBhY3Rpb247XHJcbiAgICB0aGlzLl9wb3B1cEZvcm0gPSB0aGlzLl9wb3B1cEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5mb3JtXCIpO1xyXG4gICAgdGhpcy5fc3VibWl0QnV0dG9uID0gdGhpcy5fcG9wdXBGb3JtLnF1ZXJ5U2VsZWN0b3IoXCIuZm9ybV9fc3VibWl0LWJ1dHRvblwiKTtcclxuICB9XHJcbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICB0aGlzLl9wb3B1cEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCAoZXZlbnQpID0+IHtcclxuICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgdGhpcy5faGFuZGxlU3VibWl0KCk7XHJcbiAgICB9KTtcclxuXHJcbiAgICBzdXBlci5zZXRFdmVudExpc3RlbmVycygpO1xyXG4gIH1cclxuXHJcbiAgcmVuZGVyTG9hZGluZyhpc0xvYWRpbmcpIHtcclxuICAgIGlmIChpc0xvYWRpbmcpIHtcclxuICAgICAgdGhpcy5fc3VibWl0QnV0dG9uLnRleHRDb250ZW50ID0gXCJEZWxldGluZy4uLlwiO1xyXG4gICAgICB0aGlzLl9zdWJtaXRCdXR0b24uZGlzYWJsZWQgPSB0cnVlO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5fc3VibWl0QnV0dG9uLnRleHRDb250ZW50ID0gXCJZZXNcIjtcclxuICAgICAgdGhpcy5fc3VibWl0QnV0dG9uLmRpc2FibGVkID0gZmFsc2U7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiJdLCJuYW1lcyI6WyJDYXJkIiwiY29uc3RydWN0b3IiLCJkYXRhIiwiY2FyZFNlbGVjdG9yIiwiaGFuZGxlQ2FyZENsaWNrIiwiaGFuZGxlVHJhc2hCdXR0b25DbGljayIsImhhbmRsZUxpa2VCdXR0b25DbGljayIsInRoaXMiLCJfY2FyZFRlbXBsYXRlIiwiY2xvbmVOb2RlIiwiX2NhcmRTZWxlY3RvciIsIl9pZCIsIl9vd25lcklkIiwib3duZXIiLCJfdXNlcklkIiwidXNlcl9pZCIsIl9saWtlc0NvdW50IiwibGlrZXMiLCJsZW5ndGgiLCJfbGlrZXNMaXN0IiwiY29udGVudCIsInF1ZXJ5U2VsZWN0b3IiLCJfaGFuZGxlVHJhc2hCdXR0b25DbGljayIsIl9oYW5kbGVDYXJkQ2xpY2siLCJfaGFuZGxlTGlrZUJ1dHRvbkNsaWNrIiwiX25hbWUiLCJuYW1lUGxhY2UiLCJfbGluayIsImxpbmtQbGFjZSIsIl9hbHQiLCJfc2V0RXZlbnRMaXN0ZW5lcnMiLCJfY2FyZExpa2VCdXR0b25FbGVtZW50IiwiYWRkRXZlbnRMaXN0ZW5lciIsImUiLCJfY2FyZFRyYXNoQnV0dG9uRWxlbWVudCIsIl9jYXJkSW1hZ2VFbGVtZW50IiwiZ2V0SXNMaWtlZCIsIl9pc0xpa2VkIiwidXBkYXRlTGlrZXMiLCJfcmVuZGVyTGlrZXMiLCJzb21lIiwicGVyc29uIiwibGlrZXNDb3VudCIsIl9jYXJkTGlrZXNDb3VudGVyRWxlbWVudCIsInRleHRDb250ZW50IiwiY2xhc3NMaXN0IiwiYWRkIiwicmVtb3ZlIiwiZ2VuZXJhdGVDYXJkIiwiX2VsZW1lbnQiLCJfZ2V0VGVtcGxhdGUiLCJfY2FyZFRpdGxlRWxlbWVudCIsInNyYyIsImFsdCIsInJlbW92ZUNhcmQiLCJjb25maWciLCJmb3JtRWwiLCJfdG9nZ2xlQnV0dG9uIiwiX2lucHV0TGlzdCIsImZvckVhY2giLCJpbnB1dCIsIl/RgWhlY2tJbnB1dFZhbGlkaXR5IiwiZXJyb3JTcGFuIiwiaWQiLCJ2YWxpZGF0aW9uTWVzc2FnZSIsIl9jb25maWciLCJlcnJvckNsYXNzIiwiaW5wdXRFcnJvckNsYXNzIiwidmFsaWRpdHkiLCJ2YWxpZCIsIl9oaWRlSW5wdXRFcnJvciIsIl9zaG93SW5wdXRFcnJvciIsIl9idXR0b25FbGVtZW50Iiwic3VibWl0QnV0dG9uU2VsZWN0b3IiLCJBcnJheSIsImZyb20iLCJxdWVyeVNlbGVjdG9yQWxsIiwiaW5wdXRTZWxlY3RvciIsIl9oYXNWYWxpZElucHV0cyIsImRpc2FibGVkIiwiZXZlcnkiLCJlbmFibGVWYWxpZGF0aW9uIiwiZXZlbnQiLCJwcmV2ZW50RGVmYXVsdCIsInJlc2V0VmFsaWRhdGlvbiIsInJlc2V0IiwiZGVmYXVsdEZvcm1Db25maWciLCJpbmFjdGl2ZUJ1dHRvbkNsYXNzIiwicG9wdXBPcGVuRWRpdFByb2ZpbGVCdXR0b24iLCJkb2N1bWVudCIsIm5ld0NhcmRCdXR0b25FbGVtZW50IiwicG9wdXBPcGVuRWRpdEF2YXRhckxpbmsiLCJuYW1lSW5wdXQiLCJyb2xlRWxlbWVudFNlbGVjdG9yIiwicm9sZUlucHV0IiwiUG9wdXAiLCJwb3B1cFNlbGVjdG9yIiwia2V5IiwiY2xvc2UiLCJfcG9wdXBFbGVtZW50Iiwic2V0RXZlbnRMaXN0ZW5lcnMiLCJ0YXJnZXQiLCJjb250YWlucyIsIm9wZW4iLCJfaGFuZGxlRXNjQ2xvc2UiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiUG9wdXBXaXRoRm9ybSIsImhhbmRsZUZvcm1TdWJtaXQiLCJzdXBlciIsIl9wb3B1cEZvcm0iLCJfc3VibWl0QnV0dG9uIiwiX2lucHV0c0FycmF5IiwicmVuZGVyTG9hZGluZyIsImlzTG9hZGluZyIsImdldFBvcHVwRm9ybSIsIl9nZXRJbnB1dFZhbHVlcyIsImlucHV0VmFsdWVzIiwibmFtZSIsInZhbHVlIiwiY2FyZFRlbXBsYXRlRWxlbWVudCIsInVzZXJJZCIsInJlbmRlckNhcmQiLCJjYXJkIiwiaW1hZ2VQb3B1cCIsImNvbmZpcm1Nb2RhbCIsInNldEFjdGlvbiIsImFwaSIsImRlbGV0ZUNhcmQiLCJ0aGVuIiwicmVzIiwiY2F0Y2giLCJlcnJvciIsImNvbnNvbGUiLCJsb2ciLCJmaW5hbGx5IiwiZGlzTGlrZUNhcmQiLCJsaWtlQ2FyZCIsImJhc2VVcmwiLCJoZWFkZXJzIiwiYXN5bmMiLCJ1cmwiLCJyZXNwb25zZSIsImZldGNoIiwib2siLCJqc29uIiwiUHJvbWlzZSIsInJlamVjdCIsInN0YXR1c1RleHQiLCJfYmFzZVVybCIsIl9oZWFkZXJzIiwiZ2V0SW5pdGlhbENhcmRzIiwiX2N1c3RvbUZldGNoIiwiZ2V0VXNlckluZm8iLCJzZXRBdmF0YXJMaW5rIiwibWV0aG9kIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJhdmF0YXIiLCJzZXRVc2VySW5mbyIsImNyZWF0ZUNhcmQiLCJjYXJkSWQiLCJhdXRob3JpemF0aW9uIiwiY2FyZExpc3RTZWN0aW9uIiwiY29udGFpbmVyU2VsZWN0b3IiLCJpdGVtcyIsInJlbmRlcmVyIiwiZWxlbWVudCIsImNvbnRhaW5lciIsInByZXBlbmQiLCJyZW5kZXJJdGVtcyIsIml0ZW0iLCJhZGRJdGVtIiwidXNlckluZm8iLCJwcm9maWxlRm9ybU5hbWVJbnB1dCIsInByb2ZpbGVGb3JtUm9sZUlucHV0IiwiYWJvdXQiLCJhdmF0YXJMaW5rIiwiYWxsIiwiY2FyZERhdGEiLCJ1c2VyRGF0YSIsImNhcmRzIiwiZW50cnkiLCJjcmVhdGVkQXQiLCJsaW5rIiwicHVzaCIsIm5hbWVTZWxlY3RvciIsImpvYlNlbGVjdG9yIiwiYXZhdGFyU2VsZWN0b3IiLCJfbmFtZVNlbGVjdG9yIiwiX2pvYlNlbGVjdG9yIiwiX25hbWVFbGVtZW50IiwiX2pvYkVsZW1lbnQiLCJfYXZhdGFyIiwiam9iIiwiaW5mbyIsInNldFVzZXJBdmF0YXIiLCJlZGl0UHJvZmlsZVBvcHVwIiwiYWRkQ2FyZFBvcHVwIiwiZWRpdEF2YXRhclBvcHVwIiwiX3ByZXZpZXdQb3B1cEltYWdlIiwiX3ByZXZpZXdQb3B1cERlc2NyaXB0aW9uIiwiYWN0aW9uIiwiX2hhbmRsZVN1Ym1pdCIsImFkZENhcmRGb3JtIiwiRm9ybVZhbGlkYXRvciIsImVkaXRGb3JtIiwiZWRpdEF2YXRhckZvcm0iLCJmaWxsUHJvZmlsZUZvcm0iXSwic291cmNlUm9vdCI6IiJ9