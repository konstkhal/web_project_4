!function(){"use strict";function e(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}class t{constructor(t,n,i){e(this,"_getTemplate",(()=>this._cardTemplate.cloneNode(!0))),e(this,"_handleLikeButtonClick",(e=>{e.target.classList.toggle("photo-grid__like-button_active")})),e(this,"_handleTrashButtonClick",(()=>{this._element.remove(),this._element=null})),this._cardSelector=n,this._cardTemplate=this._cardSelector.content.querySelector(".photo-grid__item"),this._handleCardClick=i,this._name=t.namePlace,this._link=t.linkPlace,this._alt="Picture of ".concat(t.namePlace)}_setEventListeners(){this._cardLikeButtonElement.addEventListener("click",this._handleLikeButtonClick),this._cardTrashButtonElement.addEventListener("click",this._handleTrashButtonClick),this._cardImageElement.addEventListener("click",this._handleCardClick)}generateCard(){return this._element=this._getTemplate(),this._cardTitleElement=this._element.querySelector(".photo-grid__title"),this._cardImageElement=this._element.querySelector(".photo-grid__image"),this._cardLikeButtonElement=this._element.querySelector(".photo-grid__like-button"),this._cardTrashButtonElement=this._element.querySelector(".photo-grid__delete-button"),this._cardImageElement.src=this._link,this._cardImageElement.alt=this._name,this._cardTitleElement.textContent=this._name,this._setEventListeners(),this._element}}function n(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var i=class{constructor(e,t){n(this,"_setEventListeners",(()=>{this._toggleButton(),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._сheckInputValidity(e),this._toggleButton()}))}))})),n(this,"_showInputError",(e=>{const t=this._element.querySelector("#".concat(e.id,"-error"));t.textContent=e.validationMessage,t.classList.add(this._config.errorClass),e.classList.add(this._config.inputErrorClass)})),n(this,"_hideInputError",(e=>{const t=this._element.querySelector("#".concat(e.id,"-error"));t.textContent="",t.classList.remove(this._config.errorClass),e.classList.remove(this._config.inputErrorClass)})),n(this,"_сheckInputValidity",(e=>{e.validity.valid?this._hideInputError(e):this._showInputError(e)})),this._config={...e},this._element=t,this._buttonElement=this._element.querySelector(this._config.submitButtonSelector),this._inputList=Array.from(this._element.querySelectorAll(this._config.inputSelector))}_toggleButton(){this._hasValidInputs()?this._buttonElement.disabled=!1:this._buttonElement.disabled=!0}_hasValidInputs(){return this._inputList.every((e=>!0===e.validity.valid))}enableValidation(){this._element.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}resetValidation(){this._element.reset(),this._inputList.forEach((e=>{this._hideInputError(e)})),this._toggleButton()}};const s={inputSelector:".form__input",submitButtonSelector:".form__submit-button",inactiveButtonClass:"button_blocked",inputErrorClass:"form__input-error",errorClass:"form__input-error_visible"},r=document.querySelector(".profile__link-change"),o=document.querySelector(".profile__link-add"),l=document.querySelector(".form__input_type_name"),a=".profile__role",c=(document.querySelector(a),document.querySelector(".form__input_type_role"));document.querySelector(".form__input_type_image-title"),document.querySelector(".form__input_type_image-link");class u{constructor(e){var t,n;n=e=>{"Escape"===e.key&&(e.preventDefault(),this.close())},(t="_handleEscClose")in this?Object.defineProperty(this,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):this[t]=n,this._popupElement=document.querySelector(e)}setEventListeners(){this._popupElement.addEventListener("mousedown",(e=>{(e.target.classList.contains("popup")||e.target.classList.contains("popup__close-button"))&&this.close()}))}open(){this._popupElement.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}}class p extends u{constructor(e,t){super(e),this._popupForm=this._popupElement.querySelector("form"),this.handleFormSubmit=t,this._inputsArray=[...this._popupForm.querySelectorAll(".form__input")]}getPopupForm(){return this._popupForm}_getInputValues(){const e={};return this._inputsArray.forEach((t=>{e[t.name]=t.value})),e}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(()=>{this.handleFormSubmit(this._getInputValues()),this.close()}))}close(){super.close(),this._popupForm.reset()}}const _=document.querySelector("#card-template"),h=e=>new t(e,_,(()=>{v.open(e.linkPlace,e.namePlace)})).generateCard(),d=new class{constructor(e,t){let{items:n,renderer:i}=e;var s,r;r=e=>{this.container.prepend(e)},(s="addItem")in this?Object.defineProperty(this,s,{value:r,enumerable:!0,configurable:!0,writable:!0}):this[s]=r,this.initialItems=n,this.renderer=i,this.container=document.querySelector(t),this.renderItems()}renderItems(){this.initialItems.forEach((e=>{this.addItem(this.renderer(e))}))}}({items:[{namePlace:"Yosemite Valley",linkPlace:"https://code.s3.yandex.net/web-code/yosemite.jpg"},{namePlace:"Lake Louise",linkPlace:"https://code.s3.yandex.net/web-code/lake-louise.jpg"},{namePlace:"Bald Mountains",linkPlace:"https://code.s3.yandex.net/web-code/bald-mountains.jpg"},{namePlace:"Latemar",linkPlace:"https://code.s3.yandex.net/web-code/latemar.jpg"},{namePlace:"Vanoise National Park",linkPlace:"https://code.s3.yandex.net/web-code/vanoise.jpg"},{namePlace:"Lago di Braies",linkPlace:"https://code.s3.yandex.net/web-code/lago.jpg"}],renderer:h},".photo-grid__list"),m=new class{constructor(e,t){return this._nameSelector=e,this._jobSelector=t,this._nameElement=document.querySelector(e),this._jobElement=document.querySelector(t),this}getUserInfo(){return{name:this._nameElement.textContent,job:this._jobElement.textContent}}setUserInfo(e){this._nameElement.textContent=e.profileFormNameInput,this._jobElement.textContent=e.profileFormRoleInput}}(".profile__name",a),g=new p(".popup_type_edit-profile",(function(e){m.setUserInfo(e)})),E=new p(".popup_type_new-card",(function(e){d.addItem(h(e))})),v=new class extends u{constructor(e){var t,n;super(e),n=(e,t)=>{console.log(e),this._previewPopupImage.src=e,this._previewPopupImage.alt="Picture of ".concat(t),this._previewPopupDescription.textContent=t,super.open()},(t="open")in this?Object.defineProperty(this,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):this.open=n,this._previewPopupImage=this._popupElement.querySelector(".popup__preview-image"),this._previewPopupDescription=this._popupElement.querySelector(".popup__description")}}(".popup_type_preview"),b=new i(s,E.getPopupForm()),y=new i(s,g.getPopupForm());b.enableValidation(),y.enableValidation(),v.setEventListeners(),g.setEventListeners(),E.setEventListeners(),r.addEventListener("click",(()=>{const{name:e,job:t}=m.getUserInfo();g.open(),y.resetValidation(),l.value=e,c.value=t})),o.addEventListener("click",(()=>{E.open(),b.resetValidation()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,